{"version":3,"sources":["../../../../src/app/ng2-jsonapi/ng2-jsonapi.ts"],"names":[],"mappings":"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","file":"ng2-jsonapi.js","sourceRoot":"","sourcesContent":["import { RequestOptionsArgs } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { HttpWrapper } from '@briisk/http-wrapper';\n\nconst serializer = require('jsonapi-serializer').Serializer;\nconst deserializer = require('jsonapi-serializer').Deserializer;\nconst inflector = require('inflected');\n\nexport class JSONAPIRequest {\n  static createPagination(data: any, pageCount: number, links: any) {\n    return new JSONAPIRequest(data, { pageCount }, links);\n  }\n\n  constructor(\n    public data: any,\n    public meta?: any,\n    public links?: any\n  ) {}\n}\n\nexport class JSONAPIError {\n    constructor(\n        public status: string,\n        public errors: string[]\n    ) {}\n}\n\nexport class JSONAPIObject {\n  public attrs: string[];\n\n  constructor(public data: any, public name: string, attrs?: string[], public relations: any = {},\n              public meta?: any) {\n    this.setAttributes(attrs, data);\n  }\n\n  private setAttributes(attrs: string[], data: any) {\n    if (!attrs) {\n      this.makeAttributesFromData(data);\n    } else {\n      this.attrs = attrs;\n    }\n  }\n\n  private makeAttributesFromData(data: any) {\n    if (typeof data === 'object' && !!data) {\n      if (!!data.length) {\n        this.attrs = Object.keys(data[0]);\n        this.createRelations(data[0]);\n      } else {\n        this.attrs = Object.keys(data);\n        this.createRelations(data);\n      }\n    }\n  }\n\n  private createRelations(data: any) {\n    Object.keys(data)\n      .filter((key) => data.hasOwnProperty(key) && typeof data[key] === 'object' && !!data[key])\n      .filter((key) => !this.relations[key])\n      .forEach((key) => {\n        this.relations[key] = {\n          attributes: Object.keys(!!data[key].length ? data[key][0] : data[key]),\n          ref: (_, relationObject) => relationObject.id\n        };\n      });\n  }\n}\n\n\nexport class JSONAPI {\n  private requestInterceptors: Array<(request: JSONAPIRequest) => any> = [];\n  private errorInterceptors: Array<(request: JSONAPIError) => any> = [];\n\n  constructor(protected httpWrapper: HttpWrapper) {}\n\n  public get(\n    url: string, relationshipsObject: any = {}, options?: RequestOptionsArgs\n  ): Observable<any> {\n    return this.deserialize(\n      this.httpWrapper.get(url, options),\n      relationshipsObject\n    );\n  }\n\n  public post(\n    url: string, obj: JSONAPIObject, relationshipsObject: any = {}, options?: RequestOptionsArgs\n  ): Observable<any> {\n    return this.deserialize(\n      this.httpWrapper.post(url, this.serialize(obj), options),\n      relationshipsObject\n    );\n  }\n\n  public put(\n    url: string, obj: JSONAPIObject, relationshipsObject: any = {}, options?: RequestOptionsArgs\n  ): Observable<any> {\n    return this.deserialize(\n      this.httpWrapper.put(url, this.serialize(obj), options),\n      relationshipsObject\n    );\n  }\n\n  public patch(\n    url: string, obj: JSONAPIObject, relationshipsObject: any = {}, options?: RequestOptionsArgs\n  ): Observable<any> {\n    return this.deserialize(\n      this.httpWrapper.patch(url, this.serialize(obj), options),\n      relationshipsObject\n    );\n  }\n\n  public delete(\n    url: string, relationshipsObject: any = {}, options?: RequestOptionsArgs\n  ): Observable<any> {\n    return this.deserialize(\n      this.httpWrapper.delete(url, options),\n      relationshipsObject\n    );\n  }\n\n  addRequestInterceptor(fn: (request: JSONAPIRequest) => any): void {\n    this.requestInterceptors.push(fn);\n  }\n\n  addErrorInterceptor(fn: (request: JSONAPIError) => any): void {\n    this.errorInterceptors.push(fn);\n  }\n\n  private serialize(obj: JSONAPIObject): any {\n    const opts = Object.assign({\n      attributes: obj.attrs,\n      meta: obj.meta\n    }, obj.relations);\n    const dataSerializer = new serializer(obj.name, opts);\n\n    return dataSerializer.serialize(obj.data);\n  }\n\n  private camelize(obj: any): any {\n    if (!!obj && typeof obj === 'object') {\n      Object.keys(obj)\n        .filter((key) => obj.hasOwnProperty(key))\n        .map((key) => {\n          return {\n            newKey: inflector.camelize(inflector.underscore(key), false),\n            oldKey: key\n          };\n        })\n        .filter((keys) => keys.newKey !== keys.oldKey)\n        .forEach((keys) => {\n          obj[keys.newKey] = obj[keys.oldKey];\n          delete obj[keys.oldKey];\n        });\n    }\n    return obj;\n  }\n\n  private deserialize(http: Observable<any>, relationshipsObject: any): Observable<JSONAPIRequest | JSONAPIError> {\n    const deserializeObject = Object.assign({\n      keyForAttribute: 'camelCase'\n    }, relationshipsObject);\n\n    return Observable.create((observer: Observer<JSONAPIRequest | JSONAPIError>) => {\n      const httpSubscription = http\n        .subscribe((data) => {\n          if (typeof data.json === 'function') {\n            observer.next(data);\n            observer.complete();\n          } else {\n            new deserializer(deserializeObject).deserialize(data, (err, deserialized) => {\n              if (!!err) {\n                observer.error(err);\n              } else {\n                const rawRequest: JSONAPIRequest = {\n                  data: deserialized,\n                  meta: this.camelize(data.meta),\n                  links: this.camelize(data.links)\n                };\n                const interceptedRequest = this.requestInterceptors.reduce((acc, curr) => curr(acc), rawRequest);\n                observer.next(interceptedRequest);\n                observer.complete();\n              }\n            });\n          }\n        }, (error) => {\n          const rawError: JSONAPIError = {\n            status: error.status,\n            errors: JSON.parse(error._body).errors,\n          };\n          const interceptedError = this.errorInterceptors.reduce((acc, curr) => curr(acc), rawError);\n          observer.error(interceptedError);\n        });\n\n      return () => {\n        httpSubscription.unsubscribe();\n      };\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpWrapper, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}